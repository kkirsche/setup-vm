---
# tasks file for common
- name: we're preparing to setup
  debug:
    msg: "Preparing to setup {{ inventory_hostname }} with OS family {{ ansible_os_family }} and home dir {{ ansible_env.HOME }}"

- import_tasks: kali.yml

- import_tasks: debian.yml 

- import_tasks: arch.yml

- name: download golang
  become: yes
  get_url:
    url: "https://dl.google.com/go/go{{ go_version }}.linux-amd64.tar.gz"
    dest: "/opt/golang-{{ go_version }}.tar.gz"

- name: extract / install golang
  become: yes
  unarchive:
    src: "/opt/golang-{{ go_version }}.tar.gz"
    remote_src: yes
    dest: /usr/local

- name: setup the PATH for golang
  become: yes
  lineinfile:
    path: /etc/profile
    line: 'export PATH=$PATH:/usr/local/go/bin'

- name: remove golang tarball
  become: yes
  file:
    path: "/opt/golang-{{ go_version }}.tar.gz"
    state: absent

- name: create i3 configuration directory
  file:
    path: "{{ ansible_env.HOME }}/.i3"
    state: directory

- name: copy the i3 configuration to the directory
  copy:
    src: i3/config
    dest: "{{ ansible_env.HOME }}/.i3/config"

- name: install vimrc file
  copy:
    src: vim/vimrc
    dest: "{{ ansible_env.HOME }}/.vimrc"

- name: create vim colors directory
  file:
    path: "{{ ansible_env.HOME }}/.vim/colors"
    state: directory

- name: install monokai pro vim colorscheme
  copy:
    src: vim/monokai_pro.vim
    dest: "{{ ansible_env.HOME }}/.vim/colors/monokai_pro.vim"

- name: install monokai vim colorscheme
  copy:
    src: vim/monokai.vim
    dest: "{{ ansible_env.HOME }}/.vim/colors/monokai.vim"

- name: install vundle
  git:
    repo: https://github.com/VundleVim/Vundle.vim.git
    dest: "{{ ansible_env.HOME }}/.vim/bundle/Vundle.vim"

- name: install Vundle plugins
  command: /usr/bin/vim +PluginInstall +qall

- name: download nerd powerline fonts
  become: yes
  git:
    repo: https://github.com/ryanoasis/nerd-fonts.git
    dest: "/opt/nerd-fonts"

- name: install nerd powerline fonts
  script: "/opt/nerd-fonts/install.sh"
  args:
    creates: "{{ ansible_env.HOME }}/.local/share/fonts/NerdFonts/Hack Regular Nerd Font Complete Mono.ttf"

- name: download siji fonts
  become: yes
  git:
    repo: https://github.com/stark/siji.git
    dest: "/opt/siji-fonts"

- name: download Google material icons
  become: yes
  git:
    repo: http://github.com/google/material-design-icons.git
    dest: "/opt/material-design-icons-fonts"

- name: create base configuration directory
  file:
    path: "{{ ansible_env.HOME }}/.config"
    state: directory

- name: create wallpaper configuration directory
  file:
    path: "{{ ansible_env.HOME }}/.config/images"
    state: directory
 
- name: install wallpaper
  copy:
    src: wallpaper.jpg
    dest: "{{ ansible_env.HOME }}/.config/images/wallpaper.jpg"

- name: install compton configuration
  copy:
    src: compton/compton.conf
    dest: "{{ ansible_env.HOME }}/.config/compton.conf"

- name: create terminator configuration directory
  file:
    path: "{{ ansible_env.HOME }}/.config/terminator"
    state: directory

- name: install terminator configuration
  copy:
    src: terminator/config
    dest: "{{ ansible_env.HOME }}/.config/terminator/config"
 
- name: install prezto zsh themeing
  git:
    repo: https://github.com/sorin-ionescu/prezto.git
    dest: "{{ ansible_env.HOME }}/.zprezto"
    recursive: yes 
    force: yes

- name: install prezto helper script
  copy:
    src: prezto/create_zsh_configuration.sh
    dest: "{{ ansible_env.HOME }}/create_zsh_configuration.sh"

- name: setup prezto via helper script
  script: "{{ ansible_env.HOME }}/create_zsh_configuration.sh"

- name: cleanup prezto helper script
  file:
    path: "{{ ansible_env.HOME }}/create_zsh_configuration.sh"
    state: absent

- name: set the default shell of the current user to ZSH 
  become: yes
  user:
    name: "{{ ansible_env.USER }}"
    shell: /bin/zsh
    state: present
    generate_ssh_key: yes
    ssh_key_bits: 4096
 
- name: set the prezto key-bindings
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zpreztorc"
    regexp: "zstyle ':prezto:module:editor' key-bindings 'emacs'"
    line: "zstyle ':prezto:module:editor' key-bindings 'vi'"

- name: set the prezto theme
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zpreztorc"
    regexp: "zstyle ':prezto:module:prompt' theme 'sorin'" 
    line: "zstyle ':prezto:module:prompt' theme 'powerlevel9k'"

- name: set prezto to launch a tmux session when starting up (local)
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zpreztorc"
    regexp: "# zstyle ':prezto:module:tmux:auto-start' local 'yes'"
    line: "zstyle ':prezto:module:tmux:auto-start' local 'yes'"

- name: set prezto to launch a tmux session when starting up (SSH)
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zpreztorc"
    regexp: "# zstyle ':prezto:module:tmux:auto-start' remote 'yes'"
    line: "zstyle ':prezto:module:tmux:auto-start' remote 'yes'"

- name: set the terminal for 256 color mode
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    line: 'export TERM="xterm-256color"'
    insertbefore: '# Source Prezto\.'

- name: set the terminal for NERD font availability
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    line: "export POWERLEVEL9K_MODE='nerdfont-complete'"

- name: set the powerlevel left prompt
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    line: "export POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir vcs)"

- name: set the powerlevel right prompt
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    line: "export POWERLEVEL9K_DISABLE_RPROMPT=true"
